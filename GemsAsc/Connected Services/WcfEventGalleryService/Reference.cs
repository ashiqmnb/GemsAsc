//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GemsAsc.WcfEventGalleryService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GalleryItem", Namespace="http://schemas.datacontract.org/2004/07/EventGalleryService.DTOs")]
    [System.SerializableAttribute()]
    public partial class GalleryItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUrl {
            get {
                return this.ImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUrlField, value) != true)) {
                    this.ImageUrlField = value;
                    this.RaisePropertyChanged("ImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventDTO", Namespace="http://schemas.datacontract.org/2004/07/EventGalleryService.DTOs")]
    [System.SerializableAttribute()]
    public partial class EventDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid EventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUrl {
            get {
                return this.ImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUrlField, value) != true)) {
                    this.ImageUrlField = value;
                    this.RaisePropertyChanged("ImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventByIdDTO", Namespace="http://schemas.datacontract.org/2004/07/EventGalleryService.DTOs")]
    [System.SerializableAttribute()]
    public partial class EventByIdDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid EventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUrl {
            get {
                return this.ImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUrlField, value) != true)) {
                    this.ImageUrlField = value;
                    this.RaisePropertyChanged("ImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfEventGalleryService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddGallery", ReplyAction="http://tempuri.org/IService1/AddGalleryResponse")]
        int AddGallery(string title, string imageUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddGallery", ReplyAction="http://tempuri.org/IService1/AddGalleryResponse")]
        System.Threading.Tasks.Task<int> AddGalleryAsync(string title, string imageUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetGalleryItems", ReplyAction="http://tempuri.org/IService1/GetGalleryItemsResponse")]
        GemsAsc.WcfEventGalleryService.GalleryItem[] GetGalleryItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetGalleryItems", ReplyAction="http://tempuri.org/IService1/GetGalleryItemsResponse")]
        System.Threading.Tasks.Task<GemsAsc.WcfEventGalleryService.GalleryItem[]> GetGalleryItemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetGalleryItemsForHome", ReplyAction="http://tempuri.org/IService1/GetGalleryItemsForHomeResponse")]
        GemsAsc.WcfEventGalleryService.GalleryItem[] GetGalleryItemsForHome();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetGalleryItemsForHome", ReplyAction="http://tempuri.org/IService1/GetGalleryItemsForHomeResponse")]
        System.Threading.Tasks.Task<GemsAsc.WcfEventGalleryService.GalleryItem[]> GetGalleryItemsForHomeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddEvent", ReplyAction="http://tempuri.org/IService1/AddEventResponse")]
        int AddEvent(string title, string description, string date, string imageUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddEvent", ReplyAction="http://tempuri.org/IService1/AddEventResponse")]
        System.Threading.Tasks.Task<int> AddEventAsync(string title, string description, string date, string imageUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEvents", ReplyAction="http://tempuri.org/IService1/GetEventsResponse")]
        GemsAsc.WcfEventGalleryService.EventDTO[] GetEvents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEvents", ReplyAction="http://tempuri.org/IService1/GetEventsResponse")]
        System.Threading.Tasks.Task<GemsAsc.WcfEventGalleryService.EventDTO[]> GetEventsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRecentEvents", ReplyAction="http://tempuri.org/IService1/GetRecentEventsResponse")]
        GemsAsc.WcfEventGalleryService.EventDTO[] GetRecentEvents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRecentEvents", ReplyAction="http://tempuri.org/IService1/GetRecentEventsResponse")]
        System.Threading.Tasks.Task<GemsAsc.WcfEventGalleryService.EventDTO[]> GetRecentEventsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEventById", ReplyAction="http://tempuri.org/IService1/GetEventByIdResponse")]
        GemsAsc.WcfEventGalleryService.EventByIdDTO GetEventById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEventById", ReplyAction="http://tempuri.org/IService1/GetEventByIdResponse")]
        System.Threading.Tasks.Task<GemsAsc.WcfEventGalleryService.EventByIdDTO> GetEventByIdAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : GemsAsc.WcfEventGalleryService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<GemsAsc.WcfEventGalleryService.IService1>, GemsAsc.WcfEventGalleryService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddGallery(string title, string imageUrl) {
            return base.Channel.AddGallery(title, imageUrl);
        }
        
        public System.Threading.Tasks.Task<int> AddGalleryAsync(string title, string imageUrl) {
            return base.Channel.AddGalleryAsync(title, imageUrl);
        }
        
        public GemsAsc.WcfEventGalleryService.GalleryItem[] GetGalleryItems() {
            return base.Channel.GetGalleryItems();
        }
        
        public System.Threading.Tasks.Task<GemsAsc.WcfEventGalleryService.GalleryItem[]> GetGalleryItemsAsync() {
            return base.Channel.GetGalleryItemsAsync();
        }
        
        public GemsAsc.WcfEventGalleryService.GalleryItem[] GetGalleryItemsForHome() {
            return base.Channel.GetGalleryItemsForHome();
        }
        
        public System.Threading.Tasks.Task<GemsAsc.WcfEventGalleryService.GalleryItem[]> GetGalleryItemsForHomeAsync() {
            return base.Channel.GetGalleryItemsForHomeAsync();
        }
        
        public int AddEvent(string title, string description, string date, string imageUrl) {
            return base.Channel.AddEvent(title, description, date, imageUrl);
        }
        
        public System.Threading.Tasks.Task<int> AddEventAsync(string title, string description, string date, string imageUrl) {
            return base.Channel.AddEventAsync(title, description, date, imageUrl);
        }
        
        public GemsAsc.WcfEventGalleryService.EventDTO[] GetEvents() {
            return base.Channel.GetEvents();
        }
        
        public System.Threading.Tasks.Task<GemsAsc.WcfEventGalleryService.EventDTO[]> GetEventsAsync() {
            return base.Channel.GetEventsAsync();
        }
        
        public GemsAsc.WcfEventGalleryService.EventDTO[] GetRecentEvents() {
            return base.Channel.GetRecentEvents();
        }
        
        public System.Threading.Tasks.Task<GemsAsc.WcfEventGalleryService.EventDTO[]> GetRecentEventsAsync() {
            return base.Channel.GetRecentEventsAsync();
        }
        
        public GemsAsc.WcfEventGalleryService.EventByIdDTO GetEventById(string id) {
            return base.Channel.GetEventById(id);
        }
        
        public System.Threading.Tasks.Task<GemsAsc.WcfEventGalleryService.EventByIdDTO> GetEventByIdAsync(string id) {
            return base.Channel.GetEventByIdAsync(id);
        }
    }
}
